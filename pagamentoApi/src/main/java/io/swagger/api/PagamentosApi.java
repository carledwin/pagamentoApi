/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Pagamento;
import io.swagger.model.Transacao;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-02-06T12:24:37.670Z")

@Api(value = "pagamentos", description = "the pagamentos API")
public interface PagamentosApi {

    @ApiOperation(value = "", notes = "| O Pagamentos delete endpoint *busca o* pagamento.", response = Pagamento.class, tags={ "pagamentos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Pagamento.class) })
    
    @RequestMapping(value = "/pagamentos/{id}",
        method = RequestMethod.GET)
    ResponseEntity<Pagamento> buscaPagamento(@ApiParam(value = "",required=true ) @PathVariable("id") Integer id);


    @ApiOperation(value = "Cancela um pagamento", notes = "| O Pagamentos delete endpoint *cancela o* pagamento.", response = Pagamento.class, tags={ "pagamentos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Pagamento cancelado", response = Pagamento.class) })
    
    @RequestMapping(value = "/pagamentos/{id}",
        method = RequestMethod.DELETE)
    ResponseEntity<Pagamento> cancelarPagamento(@ApiParam(value = "",required=true ) @PathVariable("id") Integer id);


    @ApiOperation(value = "Confirma o pagamento", notes = "| O Pagamentos put endpoint *confirma o* pagamento.", response = Pagamento.class, tags={ "pagamentos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Pagamento confirmado", response = Pagamento.class) })
    
    @RequestMapping(value = "/pagamentos/{id}",
        method = RequestMethod.PUT)
    ResponseEntity<Pagamento> confirmarPagamento(@ApiParam(value = "",required=true ) @PathVariable("id") Integer id);


    @ApiOperation(value = "Cria novo pagamento", notes = "Endpoint de pagamento", response = Pagamento.class, tags={ "pagamentos", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Novo pagamento criado", response = Pagamento.class) })
    
    @RequestMapping(value = "/pagamentos",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Pagamento> criarPagamento(@ApiParam(value = "Transação" ,required=true )  @Valid @RequestBody Transacao transacao);

}
